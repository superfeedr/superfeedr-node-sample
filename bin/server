#!/usr/bin/env node

var express = require("express"),
    app = express.createServer(),
    io = require('socket.io').listen(app),
    superfeedr = require('superfeedr').Superfeedr; // socket.io may listen to an http

// Use Express to serve static content, such as our index.html
app.configure(function(){
  app.use(express.static(__dirname + '/../public'));
});

var superfeedr_login = process.env.SUPERFEEDR_LOGIN || '',
    superfeedr_password = process.env.SUPERFEEDR_PASSWORD || '';

var keywords = ["superfeedr", "pubsubhubbub", "msgboy", "pubsub"];

client = new superfeedr(superfeedr_login, superfeedr_password);
client.on('connected', function() {
    keywords.each(function(keyword) {
        client.subscribe("http://superfeedr.com/track/"+keyword, function(err, feed) {
            console.log("Susbcribed to " + keyword);
        });
    });
    client.unsubscribe("http://superfeedr.com/track/music", function(err, feed) {
        console.log("Susbcribed to " + keyword);
    });
    
});

// Using long polling on heroku as they don't support websockets just yet.
io.configure(function () { 
  io.set("transports", ["xhr-polling"]); 
  io.set("polling duration", 10); 
});

//Socket.io emits this event when a connection is made.
io.sockets.on('connection', function (socket) {
  // Emit a message to send it to the client.
  client.on('notification', function(notification) {
      socket.emit('notification', notification);
  });
  
});

var port = process.env.PORT || 8080;
app.listen(port);

console.log('socket.io server started on port ' + port);
