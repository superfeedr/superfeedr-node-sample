#!/usr/bin/env node

var express = require('express'),
inbox = require('./inbox.js').inbox,
app = express.createServer(),
io = require('socket.io').listen(app),
superfeedr = require('superfeedr').Superfeedr; // socket.io may listen to an http

// Use Express to serve static content, such as our index.html
app.configure(function(){
    app.use(express.static(__dirname + '/../public'));
});

var superfeedr_login = 'nodesample', //process.env.SUPERFEEDR_LOGIN,
superfeedr_password = 'nodesample'; //process.env.SUPERFEEDR_PASSWORD || '';

var keywords = ['music', 'superfeedr', 'pubsubhubbub', 'msgboy', 'pubsub'];

client = new superfeedr(superfeedr_login, superfeedr_password);
client.on('connected', function() {
    for (var i in keywords) {
        var keyword = keywords[i];
        client.subscribe('http://superfeedr.com/track/'+keyword, function(err, feed) {
            console.log('Susbcribed to', feed.url);
        });
    }
});

client.on('notification', function(notification) {
    inbox.push(notification);
});

// Using long polling on heroku as they don't support websockets just yet.
io.configure(function () { 
    io.set('transports', ['xhr-polling']); 
    io.set('polling duration', 10); 
    io.set('log level', 1);
});

//Socket.io emits this event when a connection is made.
io.sockets.on('connection', function (socket) {
    inbox.each(function(notification) {
        socket.emit('notification', notification);
    });
    inbox.on('added', function(notification) {
        socket.emit('notification', notification);
    });
});

var port = process.env.PORT || 8080;
app.listen(port);

